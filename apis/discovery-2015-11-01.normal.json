{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2015-11-01",
    "endpointPrefix":"discovery",
    "jsonVersion":"1.1",
    "protocol":"json",
    "serviceFullName":"AWS Application Discovery Service",
    "signatureVersion":"v4",
    "targetPrefix":"AWSPoseidonService_V2015_11_01"
  },
  "operations":{
    "CreateTags":{
      "name":"CreateTags",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateTagsRequest"},
      "output":{"shape":"CreateTagsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Creates one or more tags for a configuration item. Tags are metadata that help you categorize IT assets.</p>"
    },
    "DeleteTags":{
      "name":"DeleteTags",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteTagsRequest"},
      "output":{"shape":"DeleteTagsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Deletes one or more tags associated with a configuration item.</p>"
    },
    "DescribeAgents":{
      "name":"DescribeAgents",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeAgentsRequest"},
      "output":{"shape":"DescribeAgentsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Lists AWS agents by ID or lists all agents associated with your user account if you did not specify an agent ID.</p>"
    },
    "DescribeTags":{
      "name":"DescribeTags",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeTagsRequest"},
      "output":{"shape":"DescribeTagsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Retrieve a list of configuration items that are tagged with a specific tag. Or retrieve a list all tags assigned to a specific configuration item.</p>"
    },
    "ExportConfigurations":{
      "name":"ExportConfigurations",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "output":{"shape":"ExportConfigurationsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"},
        {"shape":"OperationNotPermittedException"}
      ],
      "documentation":"<p>Exports the selected configurations to an Amazon S3 bucket.</p>"
    },
    "GetConfigurationAttributes":{
      "name":"GetConfigurationAttributes",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetConfigurationAttributesRequest"},
      "output":{"shape":"GetConfigurationAttributesResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Retrieve a list of attributes for a specific configuration ID. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, including host name, operating system, number of network cards, etc.</p>"
    },
    "GetExportStatus":{
      "name":"GetExportStatus",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetExportStatusRequest"},
      "output":{"shape":"GetExportStatusResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Retrieves the status of a given export process.</p>"
    },
    "ListConfigurations":{
      "name":"ListConfigurations",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ListConfigurationsRequest"},
      "output":{"shape":"ListConfigurationsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Retrieve a list of configurations items according to the criteria you specify in a filter. The filter criteria identify relationship requirements.</p>"
    },
    "RemoveConfiguration":{
      "name":"RemoveConfiguration",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RemoveConfigurationRequest"},
      "output":{"shape":"RemoveConfigurationResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ]
    },
    "StartDataCollectionByAgentIds":{
      "name":"StartDataCollectionByAgentIds",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StartDataCollectionByAgentIdsRequest"},
      "output":{"shape":"StartDataCollectionByAgentIdsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Instructs the specified agents to start collecting data. Agents can reside on host servers or virtual machines in your data center or on AWS EC2 instances.</p>"
    },
    "StopDataCollectionByAgentIds":{
      "name":"StopDataCollectionByAgentIds",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"StopDataCollectionByAgentIdsRequest"},
      "output":{"shape":"StopDataCollectionByAgentIdsResponse"},
      "errors":[
        {"shape":"AuthorizationErrorException"},
        {"shape":"InvalidParameterException"},
        {"shape":"InvalidParameterValueException"},
        {"shape":"ServerInternalErrorException"}
      ],
      "documentation":"<p>Instructs the specified agents to stop collecting data.</p>"
    }
  },
  "shapes":{
    "AgentConfigStatus":{
      "type":"structure",
      "members":{
        "agentId":{
          "shape":"String",
          "documentation":"<p>The agent ID.</p>"
        },
        "configUpdated":{
          "shape":"Boolean",
          "documentation":"<p>Information about whether or not the agent configuration was updated.</p>"
        },
        "description":{
          "shape":"String",
          "documentation":"<p>A description of the operation performed.</p>"
        }
      },
      "documentation":"<p>Information about agents that were instructed to start collecting data. Information includes the agent ID, a description of the operation, and whether or not the agent configuration was updated.</p>"
    },
    "AgentConfigStatusList":{
      "type":"list",
      "member":{"shape":"AgentConfigStatus"}
    },
    "AgentId":{"type":"string"},
    "AgentIds":{
      "type":"list",
      "member":{"shape":"AgentId"}
    },
    "AgentInfo":{
      "type":"structure",
      "members":{
        "agentId":{
          "shape":"AgentId",
          "documentation":"<p>The agent ID.</p>"
        },
        "hostName":{
          "shape":"String",
          "documentation":"<p>The name of the host where the agent resides. The host can be a server, virtual machine, or an AWS EC2 instance.</p>"
        },
        "agentNetworkInfoList":{
          "shape":"AgentNetworkInfoList",
          "documentation":"<p>Network details about the host where the agent resides.</p>"
        },
        "connectorId":{
          "shape":"String",
          "documentation":"<p></p>"
        },
        "version":{
          "shape":"String",
          "documentation":"<p>The agent version</p>"
        },
        "health":{
          "shape":"AgentStatus",
          "documentation":"<p>The health of the agent.</p>"
        }
      },
      "documentation":"<p>Information about agents associated with the userâ€™s AWS account. Information includes agent IDs, IP addresses, MAC addresses, agent health, hostname where the agent resides, and agent version for each agent.</p>"
    },
    "AgentNetworkInfo":{
      "type":"structure",
      "members":{
        "ipAddress":{
          "shape":"String",
          "documentation":"<p>The IP address for the host where the agent resides.</p>"
        },
        "macAddress":{
          "shape":"String",
          "documentation":"<p>The MAC address for the host where the agent resides.</p>"
        }
      },
      "documentation":"<p>Network details about the host where the agent resides.</p>"
    },
    "AgentNetworkInfoList":{
      "type":"list",
      "member":{"shape":"AgentNetworkInfo"}
    },
    "AgentStatus":{
      "type":"string",
      "enum":[
        "HEALTHY",
        "UNHEALTHY",
        "RUNNING",
        "UNKNOWN",
        "BLACKLISTED",
        "SHUTDOWN"
      ]
    },
    "AgentsInfo":{
      "type":"list",
      "member":{"shape":"AgentInfo"}
    },
    "Attribute":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"AttributeName",
          "documentation":"<p>The name of the attribute.</p>"
        },
        "Value":{
          "shape":"AttributeValue",
          "documentation":"<p>A specific attribute type. For example key = serverType and value = web server.</p>"
        }
      },
      "documentation":"<p>A specific detail about a configuration item. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, including host name, operating system, number of network cards, etc.</p>"
    },
    "AttributeList":{
      "type":"list",
      "member":{
        "shape":"Attribute",
        "locationName":"attribute"
      }
    },
    "AttributeName":{"type":"string"},
    "AttributeValue":{"type":"string"},
    "AuthorizationErrorException":{
      "type":"structure",
      "members":{
        "message":{"shape":"Message"}
      },
      "documentation":"<p>The AWS user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
      "exception":true
    },
    "Boolean":{"type":"boolean"},
    "Condition":{"type":"string"},
    "ConfigIdAttributesMap":{
      "type":"map",
      "key":{"shape":"ConfigurationId"},
      "value":{"shape":"AttributeList"}
    },
    "Configuration":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "ConfigurationExportId":{"type":"string"},
    "ConfigurationId":{"type":"string"},
    "ConfigurationIdList":{
      "type":"list",
      "member":{"shape":"ConfigurationId"}
    },
    "ConfigurationItemType":{
      "type":"string",
      "enum":[
        "SERVER",
        "PROCESS",
        "CONNECTION"
      ]
    },
    "ConfigurationTag":{
      "type":"structure",
      "members":{
        "configurationType":{
          "shape":"ConfigurationItemType",
          "documentation":"<p>A descriptor. For example, <i>serverType</i>.</p>"
        },
        "configurationId":{
          "shape":"ConfigurationId",
          "documentation":"<p>The configuration ID for the item you want to tag. You can specify a list of keys and values.</p>"
        },
        "key":{
          "shape":"TagKey",
          "documentation":"<p>A type of tag to filter on. For example <i>serverType</i>.</p>"
        },
        "value":{
          "shape":"TagValue",
          "documentation":"<p>A value to filter on. For example <i>key = serverType</i> and <i>value = web server</i>.</p>"
        }
      },
      "documentation":"<p>Tags for a configuration item. Tags are metadata that help you categorize IT assets.</p>"
    },
    "ConfigurationTagSet":{
      "type":"list",
      "member":{
        "shape":"ConfigurationTag",
        "locationName":"item"
      }
    },
    "Configurations":{
      "type":"list",
      "member":{"shape":"Configuration"}
    },
    "CreateTagsRequest":{
      "type":"structure",
      "required":[
        "configurationIds",
        "tags"
      ],
      "members":{
        "configurationIds":{
          "shape":"ConfigurationIdList",
          "documentation":"<p>A list of configuration items that you want to tag.</p>"
        },
        "tags":{
          "shape":"TagSet",
          "documentation":"<p>Tags that you want to associate with one or more configuration items. Specify the tags that you want to create in a <i>key</i>,<i>value</i> format. For example:</p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p>"
        }
      }
    },
    "CreateTagsResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DeleteTagsRequest":{
      "type":"structure",
      "required":["configurationIds"],
      "members":{
        "configurationIds":{
          "shape":"ConfigurationIdList",
          "documentation":"<p>A list of configuration items with tags that you want to delete.</p>"
        },
        "tags":{
          "shape":"TagSet",
          "documentation":"<p>Tags that you want to delete from one or more configuration items. Specify the tags that you want to delete in a <i>key</i>, <i>value</i> format. For example:</p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p>"
        }
      }
    },
    "DeleteTagsResponse":{
      "type":"structure",
      "members":{
      }
    },
    "DescribeAgentsRequest":{
      "type":"structure",
      "members":{
        "agentIds":{
          "shape":"AgentIds",
          "documentation":"<p>The agent IDs for which you want information. If you specify no IDs, the system returns information about all agents associated with your AWS user account.</p>"
        },
        "maxResults":{
          "shape":"Integer",
          "documentation":"<p>The total number of items to return. The maximum value is 100.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>A token to start the list. Use this token to get the next set of results.</p>"
        }
      }
    },
    "DescribeAgentsResponse":{
      "type":"structure",
      "members":{
        "agentsInfo":{
          "shape":"AgentsInfo",
          "documentation":"<p>Lists AWS agents by ID or lists all agents associated with your user account if you did not specify an agent ID. The output includes agent IDs, IP addresses, MAC addresses, agent health, host name where the agent resides, and the version number of each agent.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The call returns a token. Use this token to get the next set of results.</p>"
        }
      }
    },
    "DescribeTagsRequest":{
      "type":"structure",
      "members":{
        "filter":{
          "shape":"TagFilters",
          "documentation":"<p>You can filter the list using a key, value format. For example:</p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p> <p>You can separate these items by using logical operators. Allowed filters include tagkey, tagValue, and configid. </p>"
        },
        "maxResults":{
          "shape":"Integer",
          "documentation":"<p>The total number of items to return. The maximum value is 100.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>A token to start the list. Use this token to get the next set of results.</p>"
        }
      }
    },
    "DescribeTagsResponse":{
      "type":"structure",
      "members":{
        "tags":{
          "shape":"ConfigurationTagSet",
          "documentation":"<p>Depending on the input, a list of configuration items tagged with a specific tag, or a list of tags for a specific configuration item.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The call returns a token. Use this token to get the next set of results.</p>"
        }
      }
    },
    "ExportConfigurationsResponse":{
      "type":"structure",
      "members":{
        "exportId":{
          "shape":"ConfigurationExportId",
          "documentation":"<p>A unique identifier which you can use to query the export status.</p>"
        }
      }
    },
    "ExportStatusMap":{
      "type":"map",
      "key":{"shape":"String"},
      "value":{"shape":"String"}
    },
    "Filter":{
      "type":"structure",
      "required":[
        "name",
        "values",
        "condition"
      ],
      "members":{
        "name":{
          "shape":"String",
          "documentation":"<p>The name of the filter you want to use.</p>"
        },
        "values":{
          "shape":"FilterValues",
          "documentation":"<p>The value you want to filter on.</p>"
        },
        "condition":{
          "shape":"Condition",
          "documentation":"<p>A conditional operator for the filter.</p>"
        }
      },
      "documentation":"<p>A means of limiting responses.</p>"
    },
    "FilterName":{"type":"string"},
    "FilterValue":{"type":"string"},
    "FilterValues":{
      "type":"list",
      "member":{
        "shape":"FilterValue",
        "locationName":"item"
      }
    },
    "Filters":{
      "type":"list",
      "member":{"shape":"Filter"}
    },
    "GetConfigurationAttributesRequest":{
      "type":"structure",
      "required":["configurationIds"],
      "members":{
        "configurationIds":{
          "shape":"ConfigurationIdList",
          "documentation":"<p>One or more configuration IDs.</p>"
        }
      }
    },
    "GetConfigurationAttributesResponse":{
      "type":"structure",
      "members":{
        "configurations":{
          "shape":"ConfigIdAttributesMap",
          "documentation":"<p>Returns configuration details, including the configuration ID, attribute names, and attribute values.</p>"
        }
      }
    },
    "GetExportStatusRequest":{
      "type":"structure",
      "required":["exportId"],
      "members":{
        "exportId":{
          "shape":"ConfigurationExportId",
          "documentation":"<p>A unique identifier which you can use to query the export status.</p>"
        }
      }
    },
    "GetExportStatusResponse":{
      "type":"structure",
      "members":{
        "exportId":{
          "shape":"ConfigurationExportId",
          "documentation":"<p>Returns configuration details, including the configuration ID, attribute names, and attribute values.</p>"
        },
        "exportStatusMap":{
          "shape":"ExportStatusMap",
          "documentation":"<p>Returns export details. When the status is complete, the response includes a URL for an Amazon S3 bucket where you can view the data in a CSV file.</p>"
        }
      }
    },
    "Integer":{"type":"integer"},
    "InvalidParameterException":{
      "type":"structure",
      "members":{
        "message":{"shape":"Message"}
      },
      "documentation":"<p>One or more parameters are not valid. Verify the parameters and try again.</p>",
      "exception":true
    },
    "InvalidParameterValueException":{
      "type":"structure",
      "members":{
        "message":{"shape":"Message"}
      },
      "documentation":"<p>The value of one or more parameters are either invalid or out of range. Verify the parameter values and try again.</p>",
      "exception":true
    },
    "ListConfigurationsRequest":{
      "type":"structure",
      "required":["configurationType"],
      "members":{
        "configurationType":{
          "shape":"ConfigurationItemType",
          "documentation":"<p>A valid configuration identified by the Discovery Service. </p>"
        },
        "filters":{
          "shape":"Filters",
          "documentation":"<p>You can filter the list using a key, value format. For example:</p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p>"
        },
        "maxResults":{
          "shape":"Integer",
          "documentation":"<p>The total number of items to return. The maximum value is 100.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>A token to start the list. Use this token to get the next set of results.</p>"
        }
      }
    },
    "ListConfigurationsResponse":{
      "type":"structure",
      "members":{
        "configurations":{
          "shape":"Configurations",
          "documentation":"<p>Returns a list of configuration item IDs.</p>"
        },
        "nextToken":{
          "shape":"NextToken",
          "documentation":"<p>The call returns a token. Use this token to get the next set of results.</p>"
        }
      }
    },
    "Message":{"type":"string"},
    "NextToken":{"type":"string"},
    "OperationNotPermittedException":{
      "type":"structure",
      "members":{
        "message":{"shape":"Message"}
      },
      "documentation":"<p>This operation is not permitted.</p>",
      "exception":true
    },
    "RemoveConfigurationRequest":{
      "type":"structure",
      "required":["configurationId"],
      "members":{
        "configurationId":{"shape":"ConfigurationId"}
      }
    },
    "RemoveConfigurationResponse":{
      "type":"structure",
      "members":{
      }
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
        "message":{"shape":"Message"}
      },
      "documentation":"<p>The specified configuration ID was not located. Verify the configuration ID and try again.</p>",
      "exception":true
    },
    "ServerInternalErrorException":{
      "type":"structure",
      "members":{
        "message":{"shape":"Message"}
      },
      "documentation":"<p>The server experienced an internal error. </p>",
      "exception":true,
      "fault":true
    },
    "StartDataCollectionByAgentIdsRequest":{
      "type":"structure",
      "required":["agentIds"],
      "members":{
        "agentIds":{
          "shape":"AgentIds",
          "documentation":"<p>The IDs of the agents that you want to start collecting data.</p>"
        }
      }
    },
    "StartDataCollectionByAgentIdsResponse":{
      "type":"structure",
      "members":{
        "agentsConfigStatus":{
          "shape":"AgentConfigStatusList",
          "documentation":"<p>Information about agents that were instructed to start collecting data. Information includes the agent ID, a description of the operation performed, and whether or not the agent configuration was updated.</p>"
        }
      }
    },
    "StopDataCollectionByAgentIdsRequest":{
      "type":"structure",
      "required":["agentIds"],
      "members":{
        "agentIds":{
          "shape":"AgentIds",
          "documentation":"<p>The IDs of the agents that you want to stop collecting data.</p>"
        }
      }
    },
    "StopDataCollectionByAgentIdsResponse":{
      "type":"structure",
      "members":{
        "agentsConfigStatus":{
          "shape":"AgentConfigStatusList",
          "documentation":"<p>Information about agents that were instructed to stop collecting data. Information includes the agent ID, a description of the operation performed, and whether or not the agent configuration was updated.</p>"
        }
      }
    },
    "String":{"type":"string"},
    "Tag":{
      "type":"structure",
      "required":[
        "key",
        "value"
      ],
      "members":{
        "key":{
          "shape":"TagKey",
          "documentation":"<p>A type of tag to filter on.</p>"
        },
        "value":{
          "shape":"TagValue",
          "documentation":"<p>A value for a tag key to filter on.</p>"
        }
      },
      "documentation":"<p>Metadata that help you categorize IT assets.</p>"
    },
    "TagFilter":{
      "type":"structure",
      "required":[
        "Name",
        "Values"
      ],
      "members":{
        "Name":{
          "shape":"FilterName",
          "documentation":"<p>A name of a tag filter.</p>"
        },
        "Values":{
          "shape":"FilterValues",
          "documentation":"<p>Values of a tag filter.</p>"
        }
      },
      "documentation":"<p>A means of limiting responses when searching for tags.</p>"
    },
    "TagFilters":{
      "type":"list",
      "member":{"shape":"TagFilter"}
    },
    "TagKey":{"type":"string"},
    "TagSet":{
      "type":"list",
      "member":{
        "shape":"Tag",
        "locationName":"item"
      }
    },
    "TagValue":{"type":"string"}
  },
  "documentation":"<p>This is the AWS Discovery Service API Reference. The AWS Discovery Service streamlines the process of migrating to Amazon Web Services by helping you identify assets in your data center, including servers, virtual machines, applications, application dependencies, and network infrastructure. You can use this information to find the workloads that make up an application, analyze dependencies, and build migration strategies. The service also collects performance data about your workloads which you can use to assess migration outcomes.</p> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for the Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the AWS SDKs to access an API that's tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">AWS SDKs</a>.</p> <p>This guide is intended for use with the <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/remote-commands-prereq.html\">AWS Discovery Service user guide</a>.</p> <p>The following are short descriptions of each API action, organized by function.</p> <p> <b>Managing AWS Agents</b> </p> <p>The AWS agent is an Amazon application that you install on servers and virtual machines in your data center or on Amazon EC2 instances. The agent captures server configuration and activity information (including hardware profile, network, file system, and process activity) and sends this data to the AWS Application Discovery Service. The Discovery Service processes this data and maps the application dependencies for your workloads.</p> <ul> <li> <p> <i>StartDataCollectionByAgentIds</i>: Instructs the specified agents to start collecting data. Agents can reside on host servers or virtual machines in your data center or on AWS EC2 instances.</p> </li> <li> <p> <i>StopDataCollectionByAgentIds</i>: Instructs the specified agents to stop collecting data.</p> </li> <li> <p> <i>DescribeAgents</i>: Lists AWS agents by ID or lists all agents associated with your user account if you did not specify an agent ID. The output includes agent IDs, IP addresses, MAC addresses, agent health, host name where the agent resides, and the version number of each agent.</p> </li> </ul> <p> <b>Querying Configuration Items</b> </p> <p>A <i>configuration item</i> is an IT asset that was discovered in your data center by an AWS agent. With the Discovery Service, you can specify filters and query specific configuration items. For example, using this API, you could create a filter to query for a process configuration item named apache and an operating system configuration item named Ubuntu.</p> <ul> <li> <p> <i>GetConfigurationAttributes</i>: Retrieves a list of attributes for a specific configuration ID. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, including host name, operating system, number of network cards, etc.</p> </li> <li> <p> <i>ListConfigurations</i>: Retrieves a list of configurations items according to the criteria you specify in a filter. The filter criteria identify relationship requirements. For example, the following filter specifies criteria of process.name and values of <i>nginx</i> and <i>apache</i>.</p> <p> <code>ConfigurationType = Process Filters = [WebServerCriteria] WebServerCriteria = { â€˜keyâ€™ : process.name, â€˜valuesâ€™ : [ â€˜nginxâ€™, â€˜apacheâ€™ ], â€˜conditionâ€™ : â€˜containsâ€™ } </code> </p> </li> </ul> <p> <b>Tagging Discovered Configuration Items</b> </p> <p>You can tag discovered configuration items. Tags are metadata that help you categorize IT assets in your data center. Tags use a <i>key</i>,<i>value</i> format. For example, <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code>. </p> <ul> <li> <p> <i>CreateTags</i>: Creates one or more tags for a configuration item. Tags are metadata that help you categorize IT assets.</p> </li> <li> <p> <i>DescribeTags</i>: Retrieve a list of configuration items that are tagged with a specific tag. Or retrieve a list all tags assigned to a specific configuration item.</p> </li> <li> <p> <i>DeleteTags</i>: Deletes one or more tags associated with a configuration item.</p> </li> </ul> <p> <b>Exporting Data</b> </p> <p>You can export discovered data to an Amazon S3 bucket in the form of CSV files.</p> <ul> <li> <p> <i>ExportConfigurations</i>: Exports all discovered configuration data to an Amazon S3 bucket. Data includes processes, connections, servers, and system performance.</p> </li> <li> <p> <i>GetExportStatus</i>: Gets the status of the data export. When the export is complete, the service returns an Amazon S3 URL where you can download CSV files that include the data.</p> </li> </ul>"
}
